{"name":"Clocker","tagline":"Brooklyn managed Docker containers","body":"Clocker\r\n=======\r\n\r\nClocker creates and manages a [Docker](http://docker.io) cloud infrastructure. Clocker support \r\nsingle-click deployment and runtime management of multi-node applications that can run on\r\ncontainers distributed across docker hosts. Application blueprints written for \r\n[Brooklyn](https://brooklyn.incubator.apache.org/) can thus be deployed to a Docker cloud \r\ninfrastructure.\r\n\r\nThis repo contains the required Brooklyn entities, locations and examples.\r\n\r\n## Getting started\r\n\r\nTo get started, you just have to download Clocker, deploy the DockerCloud blueprint to the \r\ncloud or machines of your choice, and then use Clocker to deploy your applications. This will \r\nautomatically create the required Docker containers.\r\n\r\n<iframe width=\"640\" height=\"480\" src=\"//www.youtube.com/embed/i2Nhg2J8puM\" frameborder=\"0\" allowfullscreen></iframe>\r\n\r\nYou can create a Docker based cloud infrastructure on your favourite cloud provider or on a \r\nprivate cloud using any of the jclouds supported APIs. Alternatively you can target one or \r\nmore existing machines for running Docker.\r\n\r\nIf you are keen to peek under the covers, you can find the Clocker Infrastructure blueprint at \r\n[docker-cloud.yaml](https://raw.githubusercontent.com/brooklyncentral/clocker/master/examples/src/main/assembly/files/blueprints/docker-cloud.yaml). \r\nOr if you prefer Java take a look at \r\n[DockerCloud](https://raw.githubusercontent.com/brooklyncentral/clocker/master/examples/src/main/java/brooklyn/clocker/example/DockerCloud.java).\r\n\r\n### Using the latest Clocker release\r\n\r\nYou can build a *Docker Cloud Infrastructure* running these commands:\r\n```Bash\r\n% wget --no-check-certificate --quiet \\\r\n    -O brooklyn-clocker-examples-0.6.2-dist.tar.gz http://git.io/O--JKw\r\n% tar zxf brooklyn-clocker-examples-0.6.2-dist.tar.gz\r\n% cd brooklyn-clocker-examples-0.6.2\r\n% ./clocker.sh launch --cloud --location <location>\r\n```\r\nWhere `<location>` can be e.g. `jclouds:softlayer`, or a named location or a fixed IP e.g. `byon:(hosts=\"1.2.3.4\")`.\r\nThose simple steps will give you a running docker instance on your favourite cloud.\r\n\r\nFor anything other than a localhost or bring-your-own-nodes location, it is vital that you \r\nfirst configure a `~/.brooklyn/brooklyn.properties` file with cloud credentials and security \r\ndetails, and create an SSH key (defaulting to `~/.ssh/id_rsa`). A simple example \r\n`brooklyn.properties` file would be:\r\n\r\n```\r\n# Sets up a user with credentials admin:password for accessing the Brooklyn web-console.\r\n# To genreate the hashed password, see `brooklyn generate-password --user admin`\r\nbrooklyn.webconsole.security.users=admin\r\nbrooklyn.webconsole.security.user.admin.salt=DOp5\r\nbrooklyn.webconsole.security.user.admin.sha256=ffc241eae74cd035fdab353229d53c20943d0c1b6a0a8972a4f24769d99a6826\r\n\r\n# Credentials to use in your favourite cloud\r\nbrooklyn.location.jclouds.softlayer.identity=SL123456\r\nbrooklyn.location.jclouds.softlayer.credential=<private-key>\r\n\r\nbrooklyn.location.jclouds.aws-ec2.identity=AKA_YOUR_ACCESS_KEY_ID\r\nbrooklyn.location.jclouds.aws-ec2.credential=YourSecretKeyWhichIsABase64EncodedString\r\n```\r\n\r\nFor more information on setting up locations, including supplying cloud provider credentials, see the [_Setting up Locations_ section of\r\nBrooklyn Getting Started](https://brooklyn.incubator.apache.org/quickstart/#configuring-a-location), and the more detailed [locations guide](https://brooklyn.incubator.apache.org/v/0.7.0-M1/use/guide/locations/index.html).\r\n\r\nThe Brooklyn web-console, which will be deploying and managing your Docker Cloud, can be accessed at \r\n[http://localhost:8081](http://localhost:8081) - this URL will have been written to standard out during startup.\r\n\r\nOnce the `DockerCloud`  application has started, a new location named `my-docker-cloud` will be\r\navailable in the Locations drop-down list when adding new applications. Simply start a new application in this location\r\nand it will use Docker containers instead of virtual machines.\r\n\r\nFor more information on deploying applications from the Brooklyn catalog, see\r\n[Getting Started - Policies and Catalogs](https://brooklyn.incubator.apache.org/quickstart/policies-and-catalogs.html).\r\nYou can also paste a YAML blueprint into the _YAML_ tab of the _Add Application_ dialog, as follows:\r\n\r\n```Yaml\r\nlocation: my-docker-cloud\r\nservices:\r\n- type: brooklyn.entity.webapp.jboss.JBoss7Server\r\n  brooklyn.config:\r\n    wars.root: http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-sql-webapp//brooklyn-example\r\n```\r\n\r\n### Building from source\r\n\r\nBuild and run the examples as follows:\r\n\r\n```Bash\r\n    % git clone https://github.com/brooklyncentral/clocker.git\r\n    ...\r\n    % cd clocker\r\n    % mvn clean install\r\n    ...\r\n    % cd examples\r\n    % mvn assembly:single\r\n    ...\r\n    % cd target\r\n    % tar zxf brooklyn-clocker-examples-0.7.0-SNAPSHOT-dist.tar.gz\r\n    % cd brooklyn-clocker-examples-0.7.0-SNAPSHOT\r\n    % ./clocker.sh launch --cloud --location <location>\r\n    ...\r\n```\r\n\r\n## Getting involved\r\n\r\nClocker is Apache 2.0 licensed, and builds on Apache Brooklyn. Please get involved and join the \r\ndiscussion on [Freenode](http://freenode.net/), IRC `#brooklyncentral` or the Apache Brooklyn \r\ncommunity [mailing list](https://brooklyn.incubator.apache.org/community/). We also maintain a\r\n[Trello](https://trello.com/b/lhS7ltyi/clocker) board with the current roadmap and active tasks.\r\n\r\n\r\n### Documentation\r\n\r\nPlease visit the [wiki](https://github.com/brooklyncentral/clocker/wiki) for more details.\r\n\r\n----\r\nCopyright 2014 by Cloudsoft Corporation Limited\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n","google":"UA-15947686-1","note":"Don't delete this file! It's used internally to help with page regeneration."}